<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Add New Product</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
  <%- include('../partials/adminNavbar') %>

  <div class="container mt-5">
    <h2 class="text-center fw-bold text-success">Add New Product</h2>

    <form id="productForm" enctype="multipart/form-data">
      <!-- Product Name -->
      <div class="mb-3">
        <label for="name" class="form-label">Product Name</label>
        <input type="text" class="form-control" id="name" name="name" required>
      </div>

      <!-- Description -->
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" required></textarea>
      </div>

      <!-- Price -->
      <div class="mb-3">
        <label for="price" class="form-label">Price</label>
        <input type="number" class="form-control" id="price" name="price" required>
      </div>

      <!-- Stock -->
      <div class="mb-3">
        <label for="stock" class="form-label">Stock</label>
        <input type="number" class="form-control" id="stock" name="stock" required>
      </div>

      <!-- Category ID -->
      <div class="mb-3">
        <label for="categoryId" class="form-label">Category</label>
        <select class="form-select" id="categoryId" name="categoryId" required>
          <option value="">-- Select Category --</option>
          <% categories.forEach(category => { %>
            <option value="<%= category.categoryId %>"><%= category.categoryName %></option>
          <% }) %>
        </select>
      </div>
      
      <!-- Preview Image -->
      <div>
        <label class="form-label">Image Preview</label><br>
        <img id="imagePreview" src="#" alt="Image Preview" class="img-thumbnail" style="max-width: 200px; display: none;">
      </div>


      <!-- Product Image -->
      <div class="mb-3">
        <label for="image" class="form-label">Product Image</label>
        <input type="file" class="form-control" id="image" name="image" accept="image/*" required>
      </div>

      <!-- Submit Button -->
      <button type="submit" class="btn btn-success w-100">Create Product</button>
    </form>
  </div>

  <%- include('../partials/footer') %>
</body>

<script>
  document.getElementById("image").addEventListener("change", function() {
    const file = this.files[0];

    if (file) {
      const reader = new FileReader();

      reader.addEventListener("load", function() {
        const imagePreview = document.getElementById("imagePreview");
        imagePreview.src = this.result;
        imagePreview.style.display = "block";
      });

      reader.readAsDataURL(file);
    }
  });

  document.getElementById("productForm").addEventListener("submit", async function(event) {
    event.preventDefault();

    const form = document.getElementById("productForm");
    const formData = new FormData(form);

    // Ambil nilai dari form untuk konfirmasi
    const name = formData.get("name");
    const description = formData.get("description");
    const price = formData.get("price");
    const stock = formData.get("stock");

    if (parseFloat(price) < 0 || parseInt(stock) < 0) {
      return Swal.fire({
        title: "Invalid Input",
        text: "Price and stock must be positive numbers.",
        icon: "warning",
      });
    }

    // Konfirmasi sebelum submit
    const confirmSubmit = await Swal.fire({
      title: "Confirm Product Details",
      icon: "question",
      html: `
        <strong>Name:</strong> ${name} <br>
        <strong>Description:</strong> ${description} <br>
        <strong>Price:</strong> $${price} <br>
        <strong>Stock:</strong> ${stock} <br>
        <br>
        Are you sure you want to create this product?
      `,
      showCancelButton: true,
      confirmButtonText: "Yes, create it!",
      cancelButtonText: "Cancel",
      confirmButtonColor: "#198754",
    });

    // Jika user tidak mengonfirmasi, hentikan proses
    if (!confirmSubmit.isConfirmed) return;

    try {
      // Tampilkan loading saat kirim
      Swal.fire({
        title: "Please wait...",
        text: "Creating product...",
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading();
        }
      });
      // Kirim data ke server
      const response = await fetch("/admin/products/create", {
        method: "POST",
        body: formData,
      });

      const result = await response.json();

      // Jika berhasil, tampilkan pesan sukses dan redirect
      if (response.ok) {
        Swal.fire({
          title: "Success!",
          text: "Product created successfully.",
          icon: "success",
          timer: 2000,
          showConfirmButton: false,
        });

        setTimeout(() => {
          window.location.href = "/admin/products";
        }, 2100);
      } else {
        // Jika gagal, lempar error
        throw new Error(result.error || "Failed to create product");
      }
    } catch (error) {
      // Tangani error
      Swal.fire({
        title: "Error!",
        text: error.message,
        icon: "error",
      });
    }
  });
</script>

</html>