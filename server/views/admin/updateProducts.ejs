<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Edit Product</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<body>
  <%- include('../partials/adminNavbar') %>

  <div class="container mt-5">
    <h2 class="text-center fw-bold text-primary mb-4">Edit Product</h2>

    <form id="productForm" enctype="multipart/form-data">
      <!-- Product Name -->
      <div class="mb-3">
        <label for="name" class="form-label">Product Name</label>
        <input type="text" class="form-control" id="name" name="name" value="<%= product.name %>" required />
      </div>

      <!-- Description -->
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea class="form-control" id="description" name="description" required><%= product.description %></textarea>
      </div>

      <!-- Price -->
      <div class="mb-3">
        <label for="price" class="form-label">Price</label>
        <input type="number" class="form-control" id="price" name="price" value="<%= product.price %>" required />
      </div>

      <!-- Stock -->
      <div class="mb-3">
        <label for="stock" class="form-label">Stock</label>
        <input type="number" class="form-control" id="stock" name="stock" value="<%= product.stock %>" required />
      </div>

      <!-- Category (Dropdown) -->
      <div class="mb-3">
        <label for="categoryId" class="form-label">Category</label>
        <select class="form-select" id="categoryId" name="categoryId" required>
          <% categories.forEach(category => { %>
            <option value="<%= category.categoryId %>" <%= category.categoryId === product.categoryId ? 'selected' : '' %>>
              <%= category.categoryName %>
            </option>
          <% }) %>
        </select>        
      </div>

      <!-- Current Image -->
      <div class="mb-3">
        <label class="form-label">Current Image</label><br />
        <img src="/uploads/<%= product.imageUrl %>" alt="Current Product Image" class="img-thumbnail" width="150" />
      </div>

      <!-- Upload New Image (Optional) -->
      <div class="mb-3">
        <label for="image" class="form-label">Upload New Image (Optional)</label>
        <input type="file" class="form-control" id="image" name="image" accept="image/*" />
      </div>

      <!-- Submit -->
      <button type="submit" class="btn btn-success w-100">Update Product</button>
    </form>
  </div>

  <%- include('../partials/footer') %>

  <script>
    document.getElementById("productForm").addEventListener("submit", async function (event) {
      event.preventDefault();

      const form = document.getElementById("productForm");
      const formData = new FormData(form);

      // Validate required fields
      const name = formData.get("name").trim();
      const description = formData.get("description").trim();
      const price = formData.get("price");
      const stock = formData.get("stock");
      const categoryId = formData.get("categoryId");

      if (!name || !description || !price || !stock || !categoryId) {
        Swal.fire({
          title: "Validation Error",
          text: "Please fill in all required fields",
          icon: "error"
        });
        return;
      }

      // Validate price and stock are positive numbers
      if (price <= 0 || stock < 0) {
        Swal.fire({
          title: "Validation Error",
          text: "Price must be greater than 0 and stock cannot be negative",
          icon: "error"
        });
        return;
      }

      const confirm = await Swal.fire({
        title: "Confirm Changes",
        icon: "question",
        html: `
          <strong>Name:</strong> ${name}<br>
          <strong>Description:</strong> ${description}<br>
          <strong>Price:</strong> $${price}<br>
          <strong>Stock:</strong> ${stock}<br>
          <strong>Category:</strong> ${form.querySelector(`option[value="${categoryId}"]`).textContent}<br>
          <br>Are you sure you want to update this product?
        `,
        showCancelButton: true,
        confirmButtonText: "Yes, update it!",
        cancelButtonText: "Cancel",
        confirmButtonColor: "#28a745"
      });

      if (!confirm.isConfirmed) return;

      try {
        const response = await fetch("/admin/products/update/<%= product.productId %>", {
          method: "POST",
          body: formData
        });

        const result = await response.json();

        if (response.ok) {
          await Swal.fire({
            title: "Success!",
            text: result.message,
            icon: "success",
            timer: 2000,
            showConfirmButton: false
          });

          window.location.href = "/admin/products";
        } else {
          throw new Error(result.message || "Failed to update product");
        }
      } catch (error) {
        console.error("Update error:", error);
        Swal.fire({
          title: "Error!",
          text: error.message || "An unexpected error occurred",
          icon: "error"
        });
      }
    });
  </script>
</body>
</html>
